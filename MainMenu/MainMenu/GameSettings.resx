<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>